%!PS-Adobe-2.0 EPSF-2.0
%%Title: untersumme.eps
%%Creator: fig2dev Version 3.2.3 Patchlevel 
%%CreationDate: Wed Jan 17 10:15:53 2001
%%For: christian@christian (Christian, ich selbst)
%%BoundingBox: 0 0 673 322
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.525 0.510 0.525 srgb} bind def
/col33 {0.780 0.765 0.780 srgb} bind def
/col34 {0.906 0.890 0.906 srgb} bind def
/col35 {0.557 0.557 0.557 srgb} bind def
/col36 {0.557 0.557 0.557 srgb} bind def
/col37 {0.557 0.557 0.557 srgb} bind def
/col38 {0.557 0.557 0.557 srgb} bind def
/col39 {0.255 0.271 0.255 srgb} bind def
/col40 {0.557 0.557 0.557 srgb} bind def
/col41 {0.557 0.557 0.557 srgb} bind def
/col42 {0.557 0.557 0.557 srgb} bind def
/col43 {0.255 0.271 0.255 srgb} bind def
/col44 {0.682 0.667 0.682 srgb} bind def
/col45 {0.557 0.557 0.557 srgb} bind def
/col46 {0.255 0.271 0.255 srgb} bind def
/col47 {0.682 0.667 0.682 srgb} bind def
/col48 {0.318 0.333 0.318 srgb} bind def
/col49 {0.557 0.557 0.557 srgb} bind def
/col50 {0.255 0.271 0.255 srgb} bind def
/col51 {0.780 0.765 0.780 srgb} bind def
/col52 {0.906 0.890 0.906 srgb} bind def
/col53 {0.780 0.765 0.780 srgb} bind def
/col54 {0.525 0.510 0.525 srgb} bind def
/col55 {0.780 0.765 0.780 srgb} bind def
/col56 {0.557 0.557 0.557 srgb} bind def
/col57 {0.557 0.557 0.557 srgb} bind def
/col58 {0.255 0.255 0.255 srgb} bind def
/col59 {0.557 0.557 0.557 srgb} bind def
/col60 {0.255 0.271 0.255 srgb} bind def
/col61 {0.557 0.557 0.557 srgb} bind def
/col62 {0.255 0.271 0.255 srgb} bind def
/col63 {0.557 0.557 0.557 srgb} bind def
/col64 {0.255 0.271 0.255 srgb} bind def
/col65 {0.525 0.510 0.525 srgb} bind def
/col66 {0.780 0.765 0.780 srgb} bind def
/col67 {0.906 0.890 0.906 srgb} bind def
/col68 {0.780 0.765 0.780 srgb} bind def
/col69 {0.906 0.890 0.906 srgb} bind def
/col70 {0.000 0.000 0.475 srgb} bind def
/col71 {0.000 0.000 0.475 srgb} bind def
/col72 {1.000 0.510 0.000 srgb} bind def
/col73 {0.000 0.490 0.000 srgb} bind def
/col74 {0.000 0.490 0.000 srgb} bind def
/col75 {0.000 0.000 0.745 srgb} bind def
/col76 {0.000 0.000 0.475 srgb} bind def
/col77 {0.000 0.490 0.000 srgb} bind def
/col78 {0.255 0.255 0.255 srgb} bind def
/col79 {0.525 0.510 0.525 srgb} bind def
/col80 {0.780 0.765 0.780 srgb} bind def
/col81 {0.525 0.510 0.525 srgb} bind def
/col82 {0.780 0.765 0.780 srgb} bind def
/col83 {0.906 0.890 0.906 srgb} bind def
/col84 {0.557 0.557 0.557 srgb} bind def
/col85 {0.557 0.557 0.557 srgb} bind def
/col86 {0.255 0.255 0.255 srgb} bind def
/col87 {0.525 0.510 0.525 srgb} bind def
/col88 {0.780 0.765 0.780 srgb} bind def
/col89 {0.906 0.890 0.906 srgb} bind def
/col90 {0.780 0.714 0.588 srgb} bind def
/col91 {0.937 0.984 1.000 srgb} bind def
/col92 {0.875 0.796 0.651 srgb} bind def
/col93 {0.682 0.667 0.682 srgb} bind def
/col94 {0.318 0.333 0.318 srgb} bind def
/col95 {0.557 0.557 0.557 srgb} bind def
/col96 {0.255 0.255 0.255 srgb} bind def
/col97 {0.525 0.510 0.525 srgb} bind def
/col98 {0.780 0.765 0.780 srgb} bind def
/col99 {0.906 0.890 0.906 srgb} bind def
/col100 {0.255 0.255 0.255 srgb} bind def
/col101 {0.525 0.510 0.525 srgb} bind def
/col102 {0.780 0.765 0.780 srgb} bind def
/col103 {0.906 0.890 0.906 srgb} bind def
/col104 {0.525 0.510 0.525 srgb} bind def
/col105 {0.780 0.765 0.780 srgb} bind def
/col106 {0.906 0.890 0.906 srgb} bind def
/col107 {0.255 0.255 0.255 srgb} bind def
/col108 {0.525 0.510 0.525 srgb} bind def
/col109 {0.780 0.765 0.780 srgb} bind def
/col110 {0.255 0.255 0.255 srgb} bind def
/col111 {0.780 0.765 0.780 srgb} bind def
/col112 {0.906 0.890 0.906 srgb} bind def
/col113 {0.255 0.255 0.255 srgb} bind def
/col114 {0.525 0.510 0.525 srgb} bind def
/col115 {0.780 0.765 0.780 srgb} bind def
/col116 {0.557 0.557 0.557 srgb} bind def
/col117 {0.255 0.255 0.255 srgb} bind def
/col118 {0.525 0.510 0.525 srgb} bind def
/col119 {0.780 0.765 0.780 srgb} bind def
/col120 {0.906 0.890 0.906 srgb} bind def
/col121 {0.255 0.255 0.255 srgb} bind def
/col122 {0.525 0.510 0.525 srgb} bind def
/col123 {0.780 0.765 0.780 srgb} bind def
/col124 {0.906 0.890 0.906 srgb} bind def
/col125 {0.255 0.255 0.255 srgb} bind def
/col126 {0.525 0.510 0.525 srgb} bind def
/col127 {0.780 0.765 0.780 srgb} bind def
/col128 {0.906 0.890 0.906 srgb} bind def

end
save
newpath 0 322 moveto 0 0 lineto 673 0 lineto 673 322 lineto closepath clip newpath
-71.0 519.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% left45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<808080804040404020202020101010100808080804040404
	020202020101010180808080404040402020202010101010
	080808080404040402020202010101018080808040404040
	202020201010101008080808040404040202020201010101
	808080804040404020202020101010100808080804040404
	0202020201010101>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P4 exch def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<010101010202020204040404080808081010101020202020
	404040408080808001010101020202020404040408080808
	101010102020202040404040808080800101010102020202
	040404040808080810101010202020204040404080808080
	010101010202020204040404080808081010101020202020
	4040404080808080>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
%%Page: 1 1
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 3450 7725 m
 3450 7875 l gs col0 s gr 
% Polyline
n 4575 7725 m
 4575 7875 l gs col0 s gr 
% Polyline
n 6000 7725 m
 6000 7875 l gs col0 s gr 
% Polyline
n 7350 7725 m
 7350 7875 l gs col0 s gr 
% Polyline
n 9225 7725 m
 9225 7875 l gs col0 s gr 
% Polyline
n 11475 7725 m
 11475 7875 l gs col0 s gr 
% Polyline
n 3450 7800 m 4575 7800 l 4575 6225 l 3450 6225 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 230.00 415.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 4575 7800 m 6000 7800 l 6000 5250 l 4575 5250 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 305.00 350.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 7350 7800 m 6000 7800 l 6000 6600 l 7350 6600 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 400.00 440.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 9225 7800 m 7350 7800 l 7350 7050 l 9225 7050 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 490.00 470.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 11475 7800 m 9225 7800 l 9225 7050 l 11475 7050 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 615.00 470.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3450 6225 m 4575 6225 l 4575 5250 l 3450 5250 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 230.00 350.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 4575 5250 m 6000 5250 l 6000 5100 l 4575 5100 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 305.00 340.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 6000 6600 m 7350 6600 l 7350 5175 l 6000 5175 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 400.00 345.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 7350 7050 m 9225 7050 l 9225 6600 l 7350 6600 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 490.00 440.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 11475 7050 m 9225 7050 l 9225 5850 l 11475 5850 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 615.00 390.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
gs  clippath
12390 7830 m 12390 7770 l 12239 7770 l 12359 7800 l 12239 7830 l cp
eoclip
n 1200 7800 m
 12375 7800 l gs col0 s gr gr

% arrowhead
n 12239 7830 m 12359 7800 l 12239 7770 l 12239 7830 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
2205 4335 m 2145 4335 l 2145 4486 l 2175 4366 l 2205 4486 l cp
eoclip
n 2175 4350 m
 2175 8625 l gs col0 s gr gr

% arrowhead
n 2205 4486 m 2175 4366 l 2145 4486 l 2205 4486 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 3300 3300 m 3600 3300 l 3600 3600 l 3300 3600 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 220.00 220.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3300 3900 m 3600 3900 l 3600 4200 l 3300 4200 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 220.00 260.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3900 3900 m 4200 3900 l 4200 4200 l 3900 4200 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 260.00 260.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2925 7200 m 2925 7199 l 2926 7198 l 2927 7195 l 2929 7191 l 2932 7184 l
 2936 7175 l 2942 7164 l 2948 7150 l 2956 7132 l 2966 7112 l
 2977 7089 l 2990 7062 l 3005 7032 l 3021 6999 l 3039 6963 l
 3059 6924 l 3081 6882 l 3104 6838 l 3129 6791 l 3155 6741 l
 3183 6690 l 3213 6637 l 3244 6582 l 3276 6527 l 3310 6470 l
 3345 6412 l 3382 6354 l 3420 6295 l 3459 6237 l 3499 6178 l
 3540 6120 l 3583 6062 l 3627 6004 l 3673 5947 l 3720 5891 l
 3768 5836 l 3818 5782 l 3870 5729 l 3923 5677 l 3979 5627 l
 4036 5578 l 4096 5531 l 4158 5485 l 4222 5441 l 4289 5398 l
 4359 5358 l 4432 5320 l 4507 5284 l 4586 5251 l 4668 5220 l
 4753 5192 l 4841 5167 l 4933 5146 l 5027 5128 l 5124 5114 l
 5224 5105 l 5325 5100 l 5421 5100 l 5517 5103 l 5613 5111 l
 5707 5122 l 5799 5136 l 5889 5154 l 5975 5174 l 6058 5197 l
 6137 5222 l 6212 5250 l 6283 5279 l 6350 5311 l 6413 5344 l
 6471 5378 l 6526 5413 l 6576 5450 l 6623 5488 l 6666 5526 l
 6705 5566 l 6742 5606 l 6775 5646 l 6805 5687 l 6833 5729 l
 6859 5770 l 6883 5813 l 6905 5855 l 6925 5897 l 6945 5940 l
 6964 5983 l 6982 6026 l 7000 6069 l 7018 6112 l 7037 6155 l
 7056 6197 l 7076 6240 l 7097 6283 l 7120 6325 l 7145 6367 l
 7172 6409 l 7202 6451 l 7234 6492 l 7270 6533 l 7308 6573 l
 7351 6612 l 7397 6651 l 7447 6689 l 7502 6726 l 7561 6762 l
 7625 6797 l 7693 6830 l 7766 6862 l 7844 6892 l 7927 6920 l
 8015 6946 l 8107 6969 l 8204 6990 l 8305 7009 l 8409 7024 l
 8516 7036 l 8626 7044 l 8738 7049 l 8850 7050 l 8962 7047 l
 9074 7040 l 9184 7029 l 9293 7014 l 9400 6997 l 9504 6976 l
 9607 6953 l 9706 6927 l 9804 6899 l 9898 6868 l 9990 6835 l
 10080 6801 l 10167 6764 l 10253 6726 l 10336 6686 l 10416 6645 l
 10495 6603 l 10573 6559 l 10648 6513 l 10722 6467 l 10794 6419 l
 10865 6371 l 10934 6321 l 11002 6271 l 11069 6220 l 11135 6168 l
 11199 6116 l 11262 6063 l 11324 6010 l 11385 5957 l 11445 5904 l
 11503 5851 l 11559 5798 l 11615 5745 l 11668 5694 l 11720 5643 l
 11771 5593 l 11819 5544 l 11865 5496 l 11910 5451 l 11952 5407 l
 11992 5365 l 12029 5325 l 12064 5287 l 12097 5252 l 12127 5219 l
 12154 5189 l 12179 5162 l 12201 5137 l 12221 5115 l 12238 5096 l
 12252 5080 l 12265 5066 l 12275 5054 l 12283 5045 l 12289 5038 l
 12293 5033 l 12297 5029 l 12299 5027 l 12300 5026 l
 12300 5025 l gs col0 s gr 
/Times-Roman ff 240.00 scf sf
3225 8100 m
gs 1 -1 sc (x0=a) col0 sh gr
/Times-Roman ff 240.00 scf sf
4500 8100 m
gs 1 -1 sc (x1) col0 sh gr
/Times-Roman ff 240.00 scf sf
5925 8100 m
gs 1 -1 sc (x2) col0 sh gr
/Times-Roman ff 240.00 scf sf
7275 8100 m
gs 1 -1 sc (x3) col0 sh gr
/Times-Roman ff 240.00 scf sf
9075 8100 m
gs 1 -1 sc (x4) col0 sh gr
/Times-Roman ff 240.00 scf sf
11175 8100 m
gs 1 -1 sc (x5=b) col0 sh gr
/Times-Roman ff 240.00 scf sf
3675 4125 m
gs 1 -1 sc (+) col0 sh gr
/Times-Roman ff 240.00 scf sf
4350 4125 m
gs 1 -1 sc (= Obersumme) col0 sh gr
/Times-Roman ff 240.00 scf sf
4350 3525 m
gs 1 -1 sc (= Untersumme) col0 sh gr
$F2psEnd
rs
end
